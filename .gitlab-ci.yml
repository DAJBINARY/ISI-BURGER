stages:
  - install
  - test
  - analysis
  - build
  - deploy

variables:
  APP_ENV: testing
  DB_CONNECTION: pgsql
  DB_HOST: postgres_db
  DB_PORT: 5432
  DB_DATABASE: isi_burger
  DB_USERNAME: laravel
  DB_PASSWORD: passer
  SONAR_HOST_URL: "http://sonarqube:9000"
  SONAR_LOGIN: "your-sonarqube-token"

services:
  - name: postgres:latest
    alias: postgres_db
    command: [ "postgres", "-c", "fsync=off" ]

before_script:
  - cp .env.example .env
  - composer install --prefer-dist --no-interaction
  - php artisan key:generate
  - php artisan migrate --force
  - php artisan config:clear

install_dependencies:
  stage: install
  script:
    - echo "Installation terminée"

unit_tests:
  stage: test
  script:
    - vendor/bin/phpunit --coverage-clover coverage.xml
  artifacts:
    paths:
      - coverage.xml
    expire_in: 1 week

sonarqube_analysis:
  stage: analysis
  image: sonarsource/sonar-scanner-cli
  script:
    - sonar-scanner -Dsonar.projectKey=isi_burger -Dsonar.sources=app -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_LOGIN
  dependencies:
    - unit_tests

build_docker:
  stage: build
  script:
    - docker build -t laravel_app:latest .
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "Déploiement automatique en cours..."
  only:
    - main
